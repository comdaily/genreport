#
# APPLICATION
#
APP_NAME=app-name
APP_SCHEMA=http
APP_HOST=localhost
APP_PORT=8999
# serverenv = development OR production
APP_ENV=development
RELEASE_VERSION_OR_COMMIT_NUMBER=

#
# Get real IP of the client
#
# when using Cloudflare's CDN:
# TRUSTED_PLATFORM=cf
#
# when running on Google App Engine:
# TRUSTED_PLATFORM=google
#
# when using apache or nginx reverse proxy without
# Cloudflare's CDN or Google App Engine:
# [Default value]
TRUSTED_PLATFORM=X-Real-Ip
#
# config for nginx:
# =================
# proxy_set_header X-Real-IP       $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# Sentry.io
# By default, it is disabled
# Activate by setting it to yes
ACTIVATE_SENTRY=no
SentryDSN=https://abcd@ijk.ingest.sentry.io/xyz
# Performance tracing
# By default, it is disabled
# Activate by setting it to yes
SENTRY_ENABLE_TRACING=no
# Set sample rate to 1.0 to capture 100%
# of transactions for performance monitoring.
# We recommend adjusting this value in production.
SENTRY_TRACES_SAMPLE_RATE=0.0

#
# App Firewall
#
# By default, it is disabled
# Activate by setting it to yes
ACTIVATE_FIREWALL=yes
# Allow all IP [LISTTYPE=whitelist | IP=*]
# Block all IP [LISTTYPE=blacklist | IP=*]
# Allow one or several IPs [LISTTYPE=whitelist | IP=x.x.x.x]
# Block one or several IPs [LISTTYPE=blacklist | IP=x.x.x.x]
LISTTYPE=whitelist
# LISTTYPE=blacklist
# IP - comma-separated list
# IP=192.168.0.1,10.0.0.1
IP=*

#
# CORS
#
# By default, it is disabled
# Activate by setting it to yes
ACTIVATE_CORS=yes
#
# Access-Control-Allow-Origin
# Indicates whether the response can be shared with requesting code from the given origin
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin
CORS_ORIGIN=*
#
# Access-Control-Allow-Credentials
# Indicates whether or not the actual request can be made using credentials
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials
CORS_CREDENTIALS=true
#
# Access-Control-Allow-Headers
# Indicate which HTTP headers can be used during the actual request
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers
CORS_HEADERS=Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, Accept, Origin, Cache-Control, X-Requested-With
#
# Access-Control-Expose-Headers
# Which response headers should be made available to scripts running in the browser
# in response to a cross-origin request
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers
CORS_EXPOSE_HEADERS=Content-Length
#
# Access-Control-Allow-Methods
# Specifies one or more allowed methods
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods
CORS_METHODS=GET, POST, PUT, PATCH, DELETE, OPTIONS
#
# Access-Control-Max-Age
# Indicates how long the results of a preflight request can be cached
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age
CORS_MAXAGE=3600
#
# X-Content-Type-Options
# Prevent some browsers from MIME-sniffing the response
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
CORS_X_CONTENT_TYPE=nosniff
#
# X-Frame-Options
# Protect website against clickjacking
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
# https://tools.ietf.org/html/rfc7034#section-2.1
# X-Frame-Options: DENY, SAMEORIGIN
CORS_X_FRAME=DENY
#
# Referrer-Policy
# Set a strict Referrer Policy to mitigate information leakage
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy
CORS_REFERRER=strict-origin-when-cross-origin
#
# Content-Security-Policy
# Mitigate the risk of cross-site scripting and other content-injection attacks
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
# https://content-security-policy.com/
# https://developers.google.com/web/fundamentals/security/csp
CORS_CONTENT_SECURITY=default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self'; base-uri 'self'; form-action 'self'
#
# Timing-Allow-Origin
# Allow cross-origin access to the timing information for all resources
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Timing-Allow-Origin
CORS_TIMING_ALLOW_ORIGIN=*
#
# Strict-Transport-Security
# HTTP Strict Transport Security (HSTS)
# https://tools.ietf.org/html/rfc6797#section-6.1
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# Strict-Transport-Security: max-age=63072000; includeSubDomains
# To enable HSTS preload inclusion: https://hstspreload.org/#deployment-recommendations
# Strict-Transport-Security: max-age=63072000; includeSubDomains; preload
CORS_HSTS=

# Origin Validation
# By default, it is disabled
# Activate by setting it to yes
ACTIVATE_ORIGIN_VALIDATION=no

# IP-Based Rate Limiter
# "S": second, "M": minute, "H": hour, "D": day
# Example: RATE_LIMIT=100-M (100 requests per minute), RATE_LIMIT=100-H (100 requests per hour)
# Keep it empty to disable rate limiter
RATE_LIMIT=

#
# CUSTOM
#
# Remote: Report-UI
REPORT_UI=https://...
#
# Directories
DIR_REPORT=./reports
